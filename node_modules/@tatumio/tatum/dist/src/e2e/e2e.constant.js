"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InternalTxNetworks = exports.ContractAddressLogEventNetworks = exports.FailedTxPerBlockNetworks = exports.MultitokenNetworks = exports.NftNetworks = exports.FungibleTxNetworks = exports.PaidFeeNetworks = exports.OutgoingFailedNetworks = exports.OutgoingNativeTxNetworks = exports.IncomingNativeTxNetworks = exports.AddressEventNetworks = exports.TestConst = void 0;
const dto_1 = require("../dto");
exports.TestConst = {
    EXISTING_SUBSCRIPTION_ETH_ADDRESS: '0xbaf6dc2e647aeb6f510f9e318856a1bcd66c5e19',
    INVALID_ETH_ADDRESS: 'TLduuX5NWFucPPafLbj9eab6Znwrdm72Qv',
};
exports.AddressEventNetworks = [
    dto_1.Network.BITCOIN,
    dto_1.Network.BITCOIN_TESTNET,
    dto_1.Network.BITCOIN_CASH,
    dto_1.Network.BITCOIN_CASH_TESTNET,
    dto_1.Network.LITECOIN,
    dto_1.Network.LITECOIN_TESTNET,
    dto_1.Network.DOGECOIN,
    dto_1.Network.DOGECOIN_TESTNET,
    dto_1.Network.ETHEREUM,
    dto_1.Network.ETHEREUM_SEPOLIA,
    dto_1.Network.POLYGON,
    dto_1.Network.POLYGON_MUMBAI,
    dto_1.Network.CELO,
    dto_1.Network.CELO_ALFAJORES,
    dto_1.Network.SOLANA,
    dto_1.Network.SOLANA_DEVNET,
    dto_1.Network.BINANCE_SMART_CHAIN,
    dto_1.Network.BINANCE_SMART_CHAIN_TESTNET,
    dto_1.Network.KLAYTN,
    dto_1.Network.KLAYTN_BAOBAB,
    dto_1.Network.TRON,
    dto_1.Network.TRON_SHASTA,
    dto_1.Network.XRP,
    dto_1.Network.XRP_TESTNET,
    dto_1.Network.TEZOS,
];
exports.IncomingNativeTxNetworks = [
    dto_1.Network.BITCOIN,
    dto_1.Network.BITCOIN_TESTNET,
    dto_1.Network.LITECOIN,
    dto_1.Network.LITECOIN_TESTNET,
    dto_1.Network.DOGECOIN,
    dto_1.Network.DOGECOIN_TESTNET,
    dto_1.Network.ETHEREUM,
    dto_1.Network.ETHEREUM_SEPOLIA,
    dto_1.Network.POLYGON,
    dto_1.Network.POLYGON_MUMBAI,
    dto_1.Network.CELO,
    dto_1.Network.CELO_ALFAJORES,
    dto_1.Network.BINANCE_SMART_CHAIN,
    dto_1.Network.BINANCE_SMART_CHAIN_TESTNET,
    dto_1.Network.XRP,
    dto_1.Network.XRP_TESTNET,
    dto_1.Network.KLAYTN,
    dto_1.Network.KLAYTN_BAOBAB,
    dto_1.Network.TRON,
    dto_1.Network.TRON_SHASTA,
    dto_1.Network.SOLANA,
    dto_1.Network.SOLANA_DEVNET,
    dto_1.Network.XRP,
    dto_1.Network.XRP_TESTNET,
    dto_1.Network.TEZOS,
];
exports.OutgoingNativeTxNetworks = [
    dto_1.Network.BITCOIN,
    dto_1.Network.BITCOIN_TESTNET,
    dto_1.Network.LITECOIN,
    dto_1.Network.LITECOIN_TESTNET,
    dto_1.Network.ETHEREUM,
    dto_1.Network.ETHEREUM_SEPOLIA,
    dto_1.Network.POLYGON,
    dto_1.Network.POLYGON_MUMBAI,
    dto_1.Network.CELO,
    dto_1.Network.CELO_ALFAJORES,
    dto_1.Network.BINANCE_SMART_CHAIN,
    dto_1.Network.BINANCE_SMART_CHAIN_TESTNET,
    dto_1.Network.XRP,
    dto_1.Network.XRP_TESTNET,
    dto_1.Network.KLAYTN,
    dto_1.Network.KLAYTN_BAOBAB,
    dto_1.Network.TRON,
    dto_1.Network.TRON_SHASTA,
    dto_1.Network.SOLANA,
    dto_1.Network.SOLANA_DEVNET,
    dto_1.Network.XRP,
    dto_1.Network.XRP_TESTNET,
    dto_1.Network.TEZOS,
];
exports.OutgoingFailedNetworks = [
    dto_1.Network.ETHEREUM,
    dto_1.Network.ETHEREUM_SEPOLIA,
    dto_1.Network.POLYGON,
    dto_1.Network.POLYGON_MUMBAI,
    dto_1.Network.CELO,
    dto_1.Network.CELO_ALFAJORES,
    dto_1.Network.BINANCE_SMART_CHAIN,
    dto_1.Network.BINANCE_SMART_CHAIN_TESTNET,
    dto_1.Network.KLAYTN,
    dto_1.Network.KLAYTN_BAOBAB,
    dto_1.Network.TEZOS,
];
exports.PaidFeeNetworks = [
    dto_1.Network.ETHEREUM,
    dto_1.Network.ETHEREUM_SEPOLIA,
    dto_1.Network.POLYGON,
    dto_1.Network.POLYGON_MUMBAI,
    dto_1.Network.CELO,
    dto_1.Network.CELO_ALFAJORES,
    dto_1.Network.BINANCE_SMART_CHAIN,
    dto_1.Network.BINANCE_SMART_CHAIN_TESTNET,
    dto_1.Network.KLAYTN,
    dto_1.Network.KLAYTN_BAOBAB,
    dto_1.Network.TRON,
    dto_1.Network.TRON_SHASTA,
    dto_1.Network.XRP,
    dto_1.Network.XRP_TESTNET,
    dto_1.Network.TEZOS,
];
exports.FungibleTxNetworks = [
    dto_1.Network.ETHEREUM,
    dto_1.Network.ETHEREUM_SEPOLIA,
    dto_1.Network.POLYGON,
    dto_1.Network.POLYGON_MUMBAI,
    dto_1.Network.CELO,
    dto_1.Network.CELO_ALFAJORES,
    dto_1.Network.BINANCE_SMART_CHAIN,
    dto_1.Network.BINANCE_SMART_CHAIN_TESTNET,
    dto_1.Network.KLAYTN,
    dto_1.Network.KLAYTN_BAOBAB,
    dto_1.Network.TRON,
    dto_1.Network.TRON_SHASTA,
    dto_1.Network.SOLANA,
    dto_1.Network.SOLANA_DEVNET,
    dto_1.Network.TEZOS,
];
exports.NftNetworks = [
    dto_1.Network.ETHEREUM,
    dto_1.Network.ETHEREUM_SEPOLIA,
    dto_1.Network.POLYGON,
    dto_1.Network.POLYGON_MUMBAI,
    dto_1.Network.CELO,
    dto_1.Network.CELO_ALFAJORES,
    dto_1.Network.BINANCE_SMART_CHAIN,
    dto_1.Network.BINANCE_SMART_CHAIN_TESTNET,
    dto_1.Network.KLAYTN,
    dto_1.Network.KLAYTN_BAOBAB,
    dto_1.Network.TRON,
    dto_1.Network.TRON_SHASTA,
    dto_1.Network.SOLANA,
    dto_1.Network.SOLANA_DEVNET,
    dto_1.Network.TEZOS,
];
exports.MultitokenNetworks = [
    dto_1.Network.ETHEREUM,
    dto_1.Network.ETHEREUM_SEPOLIA,
    dto_1.Network.POLYGON,
    dto_1.Network.POLYGON_MUMBAI,
    dto_1.Network.CELO,
    dto_1.Network.CELO_ALFAJORES,
    dto_1.Network.BINANCE_SMART_CHAIN,
    dto_1.Network.BINANCE_SMART_CHAIN_TESTNET,
    dto_1.Network.KLAYTN,
    dto_1.Network.KLAYTN_BAOBAB,
];
exports.FailedTxPerBlockNetworks = [
    dto_1.Network.ETHEREUM,
    dto_1.Network.ETHEREUM_SEPOLIA,
    dto_1.Network.POLYGON,
    dto_1.Network.POLYGON_MUMBAI,
    dto_1.Network.CELO,
    dto_1.Network.CELO_ALFAJORES,
    dto_1.Network.BINANCE_SMART_CHAIN,
    dto_1.Network.BINANCE_SMART_CHAIN_TESTNET,
    dto_1.Network.KLAYTN,
    dto_1.Network.KLAYTN_BAOBAB,
    dto_1.Network.TRON,
    dto_1.Network.TRON_SHASTA,
    dto_1.Network.SOLANA,
    dto_1.Network.SOLANA_DEVNET,
    dto_1.Network.TEZOS,
];
exports.ContractAddressLogEventNetworks = [
    dto_1.Network.ETHEREUM,
    dto_1.Network.ETHEREUM_SEPOLIA,
    dto_1.Network.POLYGON,
    dto_1.Network.POLYGON_MUMBAI,
    dto_1.Network.CELO,
    dto_1.Network.CELO_ALFAJORES,
    dto_1.Network.BINANCE_SMART_CHAIN,
    dto_1.Network.BINANCE_SMART_CHAIN_TESTNET,
    dto_1.Network.KLAYTN,
    dto_1.Network.KLAYTN_BAOBAB,
];
exports.InternalTxNetworks = [
    dto_1.Network.ETHEREUM,
    dto_1.Network.ETHEREUM_SEPOLIA,
    dto_1.Network.CELO,
    dto_1.Network.CELO_ALFAJORES,
    dto_1.Network.TEZOS,
];
//# sourceMappingURL=e2e.constant.js.map