export declare enum Network {
    ALGORAND = "algorand-mainnet",
    ARBITRUM_NOVA = "arb-nova-mainnet",
    ARBITRUM_ONE = "arbitrum-one-mainnet",
    AURORA = "aurora-mainnet",
    AVALANCHE_C = "avax-mainnet",
    AVALANCHE_P = "avax-p-mainnet",
    AVALANCHE_X = "avax-x-mainnet",
    BINANCE_SMART_CHAIN = "bsc-mainnet",
    BITCOIN = "bitcoin-mainnet",
    BITCOIN_CASH = "bch-mainnet",
    CARDANO = "cardano-mainnet",
    CELO = "celo-mainnet",
    CRONOS = "cro-mainnet",
    DOGECOIN = "doge-mainnet",
    EOS = "eos-mainnet",
    HORIZEN_EON = "eon-mainnet",
    ETHEREUM = "ethereum-mainnet",
    ETHEREUM_CLASSIC = "ethereum-classic-mainnet",
    FANTOM = "fantom-mainnet",
    FLARE = "flare-mainnet",
    FLOW = "flow-mainnet",
    GNOSIS = "gno-mainnet",
    HAQQ = "haqq-mainnet",
    HARMONY_ONE_SHARD_0 = "one-mainnet-s0",
    KLAYTN = "klaytn-cypress",
    KUCOIN = "kcs-mainnet",
    LITECOIN = "litecoin-mainnet",
    MULTIVERSX = "egld-mainnet",
    NEAR = "near-mainnet",
    OASIS = "oasis-mainnet",
    OPTIMISM = "optimism-mainnet",
    PALM = "palm-mainnet",
    POLYGON = "polygon-mainnet",
    POLKADOT = "dot-mainnet",
    RSK = "rsk-mainnet",
    SOLANA = "solana-mainnet",
    STELLAR = "stellar-mainnet",
    TEZOS = "tezos-mainnet",
    TRON = "tron-mainnet",
    VECHAIN = "vechain-mainnet",
    XDC = "xdc-mainnet",
    XRP = "ripple-mainnet",
    ZCASH = "zcash-mainnet",
    ZILLIQA = "zilliqa-mainnet",
    ALGORAND_TESTNET = "algorand-testnet",
    ARBITRUM_NOVA_TESTNET = "arb-testnet",
    AURORA_TESTNET = "aurora-testnet",
    AVALANCHE_C_TESTNET = "avax-testnet",
    AVALANCHE_P_TESTNET = "avax-p-testnet",
    AVALANCHE_X_TESTNET = "avax-x-testnet",
    BINANCE_SMART_CHAIN_TESTNET = "bsc-testnet",
    BITCOIN_TESTNET = "bitcoin-testnet",
    BITCOIN_CASH_TESTNET = "bch-testnet",
    CARDANO_PREPROD = "cardano-preprod",
    CELO_ALFAJORES = "celo-testnet",
    CRONOS_TESTNET = "cro-testnet",
    DOGECOIN_TESTNET = "doge-testnet",
    ETHEREUM_GOERLI = "ethereum-goerli",
    ETHEREUM_SEPOLIA = "ethereum-sepolia",
    EOS_TESTNET = "eos-testnet",
    FANTOM_TESTNET = "fantom-testnet",
    FLARE_COSTON = "flare-coston",
    FLARE_COSTON_2 = "flare-coston2",
    FLARE_SONGBIRD = "flare-songbird",
    FLOW_TESTNET = "flow-testnet",
    GNOSIS_TESTNET = "gno-testnet",
    HAQQ_TESTNET = "haqq-testnet",
    HARMONY_ONE_TESTNET_SHARD_0 = "one-testnet-s0",
    KLAYTN_BAOBAB = "klaytn-baobab",
    KUCOIN_TESTNET = "kcs-testnet",
    LITECOIN_TESTNET = "litecoin-testnet",
    MULTIVERSX_TESTNET = "egld-testnet",
    NEAR_TESTNET = "near-testnet",
    OASIS_TESTNET = "oasis-testnet",
    OPTIMISM_TESTNET = "optimism-testnet",
    PALM_TESTNET = "palm-testnet",
    POLYGON_MUMBAI = "polygon-mumbai",
    POLKADOT_TESTNET = "dot-testnet",
    RSK_TESTNET = "rsk-testnet",
    SOLANA_DEVNET = "solana-devnet",
    STELLAR_TESTNET = "stellar-testnet",
    TEZOS_TESTNET = "tezos-testnet",
    TRON_SHASTA = "tron-testnet",
    VECHAIN_TESTNET = "vechain-testnet",
    XDC_TESTNET = "xdc-testnet",
    XRP_TESTNET = "ripple-testnet",
    ZCASH_TESTNET = "zcash-testnet",
    ZILLIQA_TESTNET = "zilliqa-testnet"
}
export declare const EVM_BASED_NETWORKS: Network[];
export declare const UTXO_BASED_NETWORKS: Network[];
export declare const DATA_API_UTXO_NETWORKS: Network[];
export declare const DATA_API_EVM_NETWORKS: Network[];
export declare const DATA_API_NETWORKS: Network[];
export declare const UTXO_LOAD_BALANCER_NETWORKS: Network[];
export declare const EVM_LOAD_BALANCER_NETWORKS: Network[];
export declare const TRON_LOAD_BALANCER_NETWORKS: Network[];
export declare const LOAD_BALANCER_NETWORKS: Network[];
export declare const EVM_ARCHIVE_NON_ARCHIVE_LOAD_BALANCER_NETWORKS: Network[];
export declare const SOLANA_NETWORKS: Network[];
export declare const TRON_NETWORKS: Network[];
export declare const isEvmBasedNetwork: (network: Network) => boolean;
export declare const isUtxoBasedNetwork: (network: Network) => boolean;
export declare const isXrpNetwork: (network: Network) => boolean;
export declare const isDataApiEvmEnabledNetwork: (network: Network) => boolean;
export declare const isDataApiEnabledNetwork: (network: Network) => boolean;
export declare const isDataApiUtxoEnabledNetwork: (network: Network) => boolean;
export declare const isSolanaEnabledNetwork: (network: Network) => boolean;
export declare const isTronNetwork: (network: Network) => boolean;
export declare const isLoadBalancerNetwork: (network: Network) => boolean;
export declare const isUtxoLoadBalancerNetwork: (network: Network) => boolean;
export declare const isEvmLoadBalancerNetwork: (network: Network) => boolean;
export declare const isEvmArchiveNonArchiveLoadBalancerNetwork: (network: Network) => boolean;
export declare const isTronLoadBalancerNetwork: (network: Network) => boolean;
export declare enum MappedNetwork {
    HORIZEN_EON = "horizen-eon-mainnet",
    DOGECOIN_MAINNET = "dogecoin-mainnet",
    DOGECOIN_TESTNET = "dogecoin-testnet"
}
export declare const MAPPED_NETWORK: {
    "eon-mainnet": MappedNetwork;
    "doge-mainnet": MappedNetwork;
    "doge-testnet": MappedNetwork;
};
